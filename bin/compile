#!/usr/bin/env bash
# bin/compile <build-dir> <cache-dir> <env-dir>

# fail fast
set -e

BPLOG_PREFIX="buildpack.gradle"

BP_DIR=$(cd "$(dirname "$0")"/.. && pwd) # absolute path
BIN_DIR=$BP_DIR/bin
OPT_DIR=$BP_DIR/opt
LIB_DIR=$BP_DIR/lib

# parse args
BUILD_DIR=$1
CACHE_DIR=$2
ENV_DIR=$3

source "$LIB_DIR"/common.sh
source "$LIB_DIR"/failures.sh
source "$LIB_DIR"/output.sh
source "$LIB_DIR"/util.sh
util::export_env_dir "${ENV_DIR}" "." "JAVA_OPTS|JAVA_TOOL_OPTIONS"

GRADLE_CHECK_TASK=check
if [ -n "${GRADLE_TESTPACK_LEGACY_TASK:-}" ]; then
	GRADLE_CHECK_TASK="test"
fi

if has_stage_task $BUILD_DIR; then
	DEFAULT_GRADLE_TASK="stage"
elif is_spring_boot $BUILD_DIR; then
	if is_webapp_runner $BUILD_DIR; then
		output::step "Spring Boot and Webapp Runner detected"
	else
		output::step "Spring Boot detected"
	fi
	DEFAULT_GRADLE_TASK="build -x ${GRADLE_CHECK_TASK}"
elif is_micronaut $BUILD_DIR; then
	output::step "Micronaut detected"
	DEFAULT_GRADLE_TASK="shadowJar -x ${GRADLE_CHECK_TASK}"
elif is_quarkus $BUILD_DIR; then
	output::step "Quarkus detected"
	DEFAULT_GRADLE_TASK="build -x ${GRADLE_CHECK_TASK}"
elif is_ratpack $BUILD_DIR; then
	output::step "Ratpack detected"
	DEFAULT_GRADLE_TASK="installDist -x ${GRADLE_CHECK_TASK}"
else
	DEFAULT_GRADLE_TASK="stage"
fi

if [ -z "$GRADLE_TASK" ]; then
	GRADLE_TASK="${DEFAULT_GRADLE_TASK}"
fi

install_jdk "${BUILD_DIR}" "${CACHE_DIR}"

export GRADLE_OPTS="${GRADLE_OPTS}${GRADLE_OPTS:+ }-Dorg.gradle.daemon=false -Dorg.gradle.internal.launcher.welcomeMessageEnabled=false"

mkdir -p "$CACHE_DIR/.gradle"
export GRADLE_USER_HOME=${GRADLE_USER_HOME:-$CACHE_DIR/.gradle}

create_project_cache_symlink "$CACHE_DIR" "$BUILD_DIR"

if [ ! -f $BUILD_DIR/gradlew ] ; then
	output::step "Installing Gradle Wrapper..."
	output::warning <<-EOF
		Warning: Your application does not have it's own gradlew file.

		We'll install one for you, but this is a deprecated feature and
		in the future may not be supported.
	EOF
	cp -rn ${OPT_DIR}/wrapper/* ${BUILD_DIR}
fi
BUILDCMD="./gradlew"
chmod +x ${BUILD_DIR}/gradlew

BUILDCMD="$BUILDCMD $GRADLE_TASK"

cd $BUILD_DIR


# build app
output::step "Building Gradle app..."
echo "-----> executing $BUILDCMD" | output::indent

buildLogFile=\".heroku/gradle-build.log\"\necho \"\" > \"${buildLogFile}\"

$BUILDCMD 2>&1 | output $buildLogFile

if [ "${PIPESTATUS[*]}" != "0 0" ]; then
	handle_gradle_errors $buildLogFile
fi

# https://github.com/heroku/heroku-buildpack-gradle/issues/49
rm -rf "$CACHE_DIR/.gradle/nodejs"
